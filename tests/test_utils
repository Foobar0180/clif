#!/bin/sh

. "$CLI_WORKDIR/src/utils/utils"

suppress="true" # Suppress any process output from commands.

test_to_lowercase_should_transform_all_characters_in_string_to_lowercase() {
  it "Should return a copy of the given string converted to lowercase."
  assertEquals "nice to meet you" "$( to_lowercase "Nice to meet you" )"
  assertEquals "nice to meet you" "$( to_lowercase "Nice To Meet You" )"
  assertEquals "nice to meet you" "$( to_lowercase "NICE TO MEET YOU" )"
  assertEquals "nic3 to m3et y0u" "$( to_lowercase "Nic3 to m3eT y0u" )"
}

test_to_uppercase_should_transform_all_characters_in_string_to_uppercase() {
  it "Should return a copy of the given string converted to uppercase."

  assertEquals "HELLO, WORLD!" "$( to_uppercase "heLLo, WoRld!" )"
  assertEquals "HELLO, WORLD!" "$( to_uppercase "hello, world!" )"
  assertEquals "H3LL0, W0R1D!" "$( to_uppercase "h3ll0, w0r1d!" )"
  assertEquals "HELLO, WORLD!" "$( to_uppercase "Hello, World!" )"
}

test_trim_whitespace_should_trim_all_whitespace_characters_from_string() {
  it "Should return a new string in which all leading and trailing whitespace characters are removed."
  assertEquals "ab" "$( trim_whitespace "    a    b     " )"
  assertEquals "a____b" "$( trim_whitespace "    a____b     " )"
  assertEquals "__ab__" "$( trim_whitespace " __ab__ " )"
}

test_config_path_should_return_the_file_path() {
  it "Should return a fully qualified path to the default profile within the config directory."

  expectedPath="$CLI_WORKDIR/src/config/$CLI_PROFILE.settings"
  assertEquals "$expectedPath" "$( config_path )"
}

test_config_path_should_throw_error_when_no_file_exists() {
  it "Should throw a no such file found error and return an exit code of 1."

  $( config_path "doesnotexist" )
  
  assertIsError $?
}

__init__() {
  test_to_lowercase_should_transform_all_characters_in_string_to_lowercase
  test_to_uppercase_should_transform_all_characters_in_string_to_uppercase
  test_trim_whitespace_should_trim_all_whitespace_characters_from_string
  test_config_path_should_return_the_file_path
  test_config_path_should_throw_error_when_no_file_exists
}