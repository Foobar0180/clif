#!/bin/sh
#
# A named profile is a collection of settings and credentials that you can apply 
# to a CLI command. When you specify a profile to run a command, the settings 
# from that profile are used.
#
# The CLI supports using any of multiple named profiles that are stored in the 
# config folder. You can configure these profiles by using the set command with 
# the --profile option, or by adding entries to the config files.

set -e
. "${CLI_WORKDIR}/src/utils/utils"

show_help() {
  echo ""
  echo "Creates a new CLI configuration file."
  echo ""
  echo "${TEXT_BOLD}USAGE:${TEXT_NORMAL}"
  echo "  $ clif configure new [[--] <arguments>]"       
  echo ""
  echo "${TEXT_BOLD}ARGUMENTS:${TEXT_NORMAL}"
  echo "  -d, --set-default             Sets the profile as the default for the CLI."
  echo "  -h, --help                    Show command line help." 
  echo "  -p, --profile <profile name>  The name of the new profile."
  echo ""
  echo "${TEXT_BOLD}EXAMPLES:${TEXT_NORMAL}"
  echo "  $ clif configure new --profile sdk236"
  echo "  $ clif configure new --profile sdk236 --set-default"
  echo ""
  exit 3
}

profile_name=""
is_default=false

while [ $# -ne 0 ]
do
  key="$1" 
  case "$key" in
    -h|--help|help)
      show_help
      ;;
    new)
      ;;
    -d|--set-default)
      is_default=true
      ;;
    -p|--profile)
      shift
      profile_name="$1"
      ;;
    *)
      say_err "$(unknown_command_message "$key")"
      exit 3
      ;;
  esac
  shift
done

# If no profile name is provided to the CLI when running the command, print out 
# a description of how to use the command.
[ -z "$profile_name" ] && show_help

new_profile="$CLI_WORKDIR/src/config/$profile_name.settings"

# Overwriting a file of the same name is not allowed.
if [ -f $new_profile ]; then
  say_err "A profile with the same name already exists."
  exit 1
fi

# The CLI supports using any of multiple named profiles that are stored in the 
# config folder.

# Here we copy the settings from an existing config file to a new config file.
copy_file $( config_path ) "$new_profile"

# If the --set-default option is specified, then update the default profile 
# to this new profile.
if [ "$is_default" = true ]; then
  $( "$CLI_WORKDIR/src/command/configure/set-default" --profile $profile_name )
fi

say "Creating new profile ... ${COLOR_GREEN}done${COLOR_NORMAL}"
exit 0